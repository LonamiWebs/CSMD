<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="codeSFD.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>126, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgICAAICAVACAgAAAgIBBAICAAgCAgBkAXFykAAAA/wA8PMMAgIBuAICATACAgGYAgIBNAICA
        VgBxcY8ATEy0AGRkmwBYWFgAXV1dAFxcXABbW1sAWVlZAFdXVwBVVVUAVFRUAFNTUwBRUVEAUFBQAE9P
        TwBNTU0AS0tLADs7OwBGRkYARUVFAENDQwBAQEAAPT09ADo6OgA3NzcANDQ0ADExMQAuLi4AKioqACcn
        JwAkJCQAISEhAB4eHgAZGRkAYGBgAMLCwgAtLS0AGxsbABgYGAATExMASEhIANfX1wBeXl4AMDAwABcX
        FwAUFBQAERERAA0NDQC9vb0A9vb2APj4+ADV1dUAR0dHAK2trQCSkpIAo6OjADY2NgAzMzMAHR0dABoa
        GgAODg4ACwsLAAcHBwDT09MAxcXFAHt7ewDc3NwAVlZWAIeHhwCNjY0AdnZ2AODg4ABCQkIAOTk5ACAg
        IAAEBAQAAgICAH5+fgDt7e0ATk5OAJiYmAC1tbUA+vr6AL+/vwC6uroAbm5uACMjIwAKCgoAsbGxAHp6
        egCPj48AxMTEAJqamgA/Pz8APDw8AGtrawC3t7cAJiYmAAEBAQCfn58AoKCgAPn5+QDr6+sAl5eXADIy
        MgA4ODgAEBAQAKmpqQCvr68A+/v7AC8vLwAsLCwAKSkpABYWFgDa2toAzc3NAM/PzwCWlpYASUlJAJmZ
        mQA1NTUA0dHRAJubmwAcHBwAwMDAAAMDAwCOjo4A/Pz8AL6+vgDm5uYAX19fAKSkpADl5eUA8fHxALS0
        tAAfHx8AY2NjAAYGBgBlZWUAnJycAJ6engBzc3MAeHh4AJCQkABiYmIASkpKABISEgDZ2dkAoaGhALOz
        swCnp6cAREREAEFBQQA+Pj4AKCgoACUlJQAiIiIADw8PAAwMDAAJCQkAlJSUAFJSUgArKysAFRUVAAUF
        BQAICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAALNaWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAExMTVpbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHk9S0y0
        s1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA7PD1LTLSzWwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQvNDU8PUtMtLNbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAFktLi80NbI9S0y0s1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAHCxLC0uLzQ1sqGsTLSzWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALEpKrGp
        qi4vNDWyoayttLNbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACknKCkqsamqqy80NbKhrK2u
        s1txAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEeoIHgoKSqxqaqrljQ1sqGsra6YjHEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAACCmp6ggeIcpKrGpqquWijWyoaytrpiMcQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAACAhIaanqCB4h3cqsamqq5aKMIChrK2umIxxAFltAAAAAAAAAAAAAAAAAAAAAAAAACAhISEh
        pqeoIHiHd31+qaqrloowgDasra6YjK8YHRISEhISsAAAAAAAAAAAAAAAACAhISGZmpucIzedX54efX5/
        cJ+gijCANnk+oaJmo6SkpKSkpQAAAAAAAAAAAAAAACAhIY2OQo+QkZKTe2+UMXd9KnSVZZaKMIA2l4Rm
        mIxxAAAAAAAAAAAAAAAAAAAAACAhOWGEISE3hRU3IleGP3iHKIiJf3BlWYowi2x5PmZNjHEAAAAAAAAA
        AAAAAAAAACAhcoEhISEhISEhISFrgmxtWEd3fX5/cGUgg0qANnk+Zk1acQAAAAAAAAAAAAAAACAhYnoh
        ISEhISEhFXt8XyJXbG1YR0h9fn9FXFlJSoA2eT5mTVpxAAAAAAAAAAAAACAhanIhISEhISFzdHV2QyEh
        IldsbVhHSHdReHBlWUlKOzx5PmZNWnEAAAAAAAAAACAhZ2AhISEhIWhAaR8hISEhQ2prV2xtWG5vOjMr
        cGVZSUo7PD0+Zk1acQAAAAAAACAhXF1eISEhIV9gISEhISEhN2FiISIjJGNkR0g6MyssZVlJSjs8PUtm
        TVpbAAAAACAhN05PFBJFH1BRFFJTFiEhQ1RVISEhG1ZXJVhHSDozKywtWUlKOzw9S0xNWlsAACAhIRo/
        QEFCH0NEQEE4FiEhISEhISEhRUYiIyQlJkdIOjMrLC0uSUo7PD1LTE0AACAhISEhNzchISEhNzchISEh
        ISEhISEhODkhISIjJCUmJyg6MyssLS4vNDs8PT4AACAhISEhISEhISEhISEhISEhISEhISExMiEhISEh
        IiMkJSYnKCkzKywtLi80NTYAACAhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEiIyQlJicoKSor
        LC0uLzAAABITExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExQVFhIXGBkaGxwdHh8AAAEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAAEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEKCwsLCwwNCwsLDg8QEBAQEQEAAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEC
        AwMDAwQFAwMDBgcICAgICQEAAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECAwMDAwQFAwMDBgcI
        CAgICQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////AAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAMAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA
</value>
  </data>
</root>